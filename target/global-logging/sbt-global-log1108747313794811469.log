[0m[[0m[0mdebug[0m] [0m[0m> Exec(run, Some(26db7975-e297-4257-b235-03c71dfa3e3a), Some(CommandSource(console0)))[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Compile / run[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 6 Scala sources to /home/gabriel/Escritorio/InterpreteLambda/target/scala-3.3.3/classes ...[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m[33m-- [E029] Pattern Match Exhaustivity Warning: /home/gabriel/Escritorio/InterpreteLambda/src/main/scala/Parser/Parser.scala:25:12 [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m25 |[0m            argumento [33mmatch[0m{[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m[33m   |[0m            ^^^^^^^^^[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m   |[0m[33mmatch[0m may not be exhaustive.[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m   |[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m   |[0mIt would fail on pattern case: List(LAMBDA, _*), List(PUNTO, _*), List(L_PAR, _*), List(Lexer.EXPRESION(_), _*), List(ESPACIO, _*), Nil[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m   |[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m   |[0m longer explanation available when compiling with `-explain`[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m[33m-- [E029] Pattern Match Exhaustivity Warning: /home/gabriel/Escritorio/InterpreteLambda/src/main/scala/Parser/Parser.scala:13:67 [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m13 |[0m    [33mprivate[0m [33mdef[0m parserAux(tokens:List[Token]):(Ast, List[Token]) = tokens [33mmatch[0m {[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m[33m   |[0m                                                                   ^^^^^^[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m   |[0m[33mmatch[0m may not be exhaustive.[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m   |[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m   |[0mIt would fail on pattern case: List(LAMBDA, LAMBDA, _*), List(LAMBDA, PUNTO, _*), List(LAMBDA, L_PAR, _*), List(LAMBDA, R_PAR, _*), List(LAMBDA, ESPACIO, _*), List(LAMBDA, _, LAMBDA, _*)[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m   |[0m(More unmatched cases are elided)[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m   |[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m   |[0m longer explanation available when compiling with `-explain`[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m[33m-- Unchecked Warning: /home/gabriel/Escritorio/InterpreteLambda/src/main/scala/Parser/Parser.scala:6:13 [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m6 |[0m        [33mcase[0m x: List[Token] =>[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m[33m  |[0m             ^[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[33m  |[0mthe type test for List[Lexer.Token] cannot be checked at runtime because its type arguments can't be determined from A[0m
[0m[[0m[33mwarn[0m] [0m[0mthree warnings found[0m
[0m[[0m[33mwarn[0m] [0m[0mCanceling execution...[0m
[0m[[0m[31merror[0m] [0m[0mCancelled: run[0m
[0m[[0m[31merror[0m] [0m[0mCancelled: run[0m
[0m[[0m[31merror[0m] [0m[0mUse 'last' for the full log.[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0mForcing garbage collection...[0m
